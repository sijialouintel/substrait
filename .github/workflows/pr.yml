name: PR Build Check

on:
  push:
    branches: [ dev_sijia ]
jobs:
  # site:
  #   name: Build Website
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Setup Python
  #       uses: ./.github/actions/dev-tool-python
  #       with:
  #         python-version: "3.8"
  #     - name: Install dependencies
  #       run: python3 -m pip install -r ./site/requirements.txt
  #     - name: Generate Static Site
  #       run: mkdocs build
  #       working-directory: ./site
  # editorconfig-checker:
  #   name: Check editorconfig
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: editorconfig-checker/action-editorconfig-checker@v1
  # proto-format-check:
  #   name: Check Protobuf Style
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: jidicula/clang-format-action@v4.5.0
  #       with:
  #         clang-format-version: '13'
  #         check-path: proto/substrait
  # proto:
  #   name: Check Protobuf
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: arduino/setup-protoc@v1
  #     - uses: bufbuild/buf-setup-action@v0.7.0
  #     - uses: bufbuild/buf-lint-action@v1
  #     - name: Compile protobuf
  #       run: buf generate
  # yamllint:
  #   name: Lint YAML extensions
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Run yamllint
  #       run: yamllint .
  # yamlvalidate:
  #   name: Validate YAML extensions
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: '14'
  #     - run: npm install -g ajv-cli
  #     - run: |
  #         set -euo pipefail
  #         for i in $(ls);
  #         do
  #           ajv validate -s ../text/simple_extensions_schema.yaml --strict=true --spec=draft2020 -d "$i"
  #         done
  #       working-directory: ./extensions
  java:
    name: Build and Test Java
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build with Gradle
        run: ./gradlew build
        working-directory: ./java
  isthmus-native-image-mac-linux:
    name: Build Isthmus Native Image
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [self-hosted]
    steps:
    - uses: actions/checkout@v1
    - uses: DeLaGuardo/setup-graalvm@5.0
      with:
        graalvm: '22.0.0.2'
        java: 'java17'
    - run: java -version
    - run: gu install native-image
    - name: Build with Gradle
      run: ./gradlew nativeImage
      working-directory: ./java
    - name: Smoke Test
      run: ./java/isthmus/src/test/script/smoke.sh
    # - name: Rename the artifact to OS-unique name
    #   shell: bash
    #   run: |
    #     value=`cp java/isthmus/build/graal/isthmus java/isthmus/build/graal/isthmus-${{ matrix.os }}`

    # - name: Publish artifact
    #   uses: actions/upload-artifact@master
    #   with:
    #     name: isthmus-${{ matrix.os }}
    #     path: java/isthmus/build/graal

